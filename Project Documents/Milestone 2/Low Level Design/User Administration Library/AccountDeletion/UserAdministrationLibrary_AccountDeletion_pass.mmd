sequenceDiagram
participant u as User
participant e as Entry Point
participant usm as UserAdministrationManager<br>(Manager Layer)
participant uc as UserService<br>(Services Layer)
participant ll as LogService<br>(Services Layer) 
participant dg as SqlDbUserTarget<br>(Data Gateway)
participant ldg as SqlDbLogTarget<br>(Data Gateway)
participant da as SQLServerDAO
participant ds as Data Store

Note Right of e: Assume something in the entry point<br>called the manager to do delete a user
e->>+usm: IAccountResponse deleteValidUser(IUserModel)
    Note over e,usm: Entry Point calls upon<br>`IAccountResponse deleteValidUser(IUserModel)`<br>to delete a user

usm->>+uc: IAccountResponse deleteUser(IUserModel)
    Note over usm,uc: UserAdministrationManager calls upon<br>`IAccountResponse deleteUser(IUserModel)`<br>to delete the user

# write log
uc-->>+ll: IResponse CreateLog(string logLevel, string logCategory, string logContext, string? createdBy = null)
    Note over uc,ll: UserService logs that a user requests for account deletion. See logging success case

ll-->>-uc: LogService returns the `IResponse` object

uc->>uc: UserService checks to see if the `IResponse` object has errors or not

# delete the user
uc->>+dg: IAccountResponse generateAccountDeletionSQL(IUserModel)
    Note over uc,dg: UserService calls upon<br>`IAccountResponse generateAccountDeletionSQL(IUserModel)`<br>to pass user data to be written to a parameterized SqlCommand

dg->>dg: SqlDbUserTarget creates Parameterized SqlCommand

dg->>+da: IResponse executeWriteSQL(SqlCommand sql)
    Note over dg,da: SqlServerUserTarget calls upon<br>`IResponse executeWriteSQL(SqlCommand sql)`<br>to write the sql

da->>+ds: SqlCommand.ExecuteNonQuery()
    Note over da,ds: SqlServerDAO calls upon<br>`SqlCommand.ExecuteNonQuery()`<br>to execute the sql command

ds->>ds: User account is successfully<br>deleted from the Data Store

ds-->>-da: Database returns the number of rows affected

da-->>-dg: IResponse object returned with<br>`IResponse.ReturnValue` equal to the retrieved value

dg-->>-uc: IAccountResponse object returned with<br>`IAccountResponse.HasError` equal to false

uc-->>-usm: IAccountResponse object returned

# Write log that user was successfully deleted
usm->>usm: UserAdministrationManager checks<br>if the user service met business rules

usm->>+ll: IResponse CreateLog(string logLevel, string logCategory, string logContext, string? createdBy = null)
    Note over usm,ll: UserAdministrationManager logs account creation was successful. See logging success case

ll-->>-usm: LogService returns the `IResponse` object

usm-->>e: IAccountResponse object returned
deactivate usm
