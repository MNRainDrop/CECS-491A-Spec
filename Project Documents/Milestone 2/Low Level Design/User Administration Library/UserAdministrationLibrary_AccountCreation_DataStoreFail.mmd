sequenceDiagram
participant u as User
participant e as Entry Point
participant usm as UserAdministrationManager<br>(Manager Layer)
participant uc as UserService<br>(Services Layer)
participant ss as PepperService<br>(Services Layer)
participant dg as SqlDbUserTarget<br>(Data Gateway)
participant da as SQLServerDAO
participant ds as Data Store

Note Right of e: Assume something in the entry point<br>called the manager to do create a user
e->>+usm: IResponse createUser(string username, string dateOfBirth)
    Note over e,usm: Entry Point calls upon<br>`IResponse createValidUser(IUserAccountModel)`<br>to create a new user

usm->>usm: UserAdministrationManager verifies that<br>the user provided values are valid

usm->>+uc: IResponse createValidUser(string username, string dateOfBirth)
    Note over usm,uc: UserAdministrationManager calls upon<br>`IResponse createUser(string username, string dateOfBirth)`<br>to create the user with the pepper

uc->>uc: UserService creates an IUserAccountModel

uc->>+ss: uint PepperService.retrievePepper()
    Note over uc,ss: UserAdministrationManager calls upon<br>`uint PepperService.retrievePepper()`<br>to get a pepper for the user
ss-->>-uc: PepperService returns a randomly generated pepper

uc->>uc: UserService modifies<br>`pepper` parameter in the IUserAccountModel

uc->>+dg: IResponse generateAccountCreationSQL(IUserAccountModel)
    Note over uc,dg: UserService calls upon<br>`IResponse generateAccountCreationSQL(IUserAccountModel)`<br>to pass user data to be written to a parameterized SqlCommand

dg->>+da: IResponse executeWriteSQL(SqlCommand sql)
    Note over dg,da: SqlServerUserTarget calls upon<br>`IResponse executeWriteSQL(SqlCommand sql)`<br>to write the sql

da->>+ds: SqlCommand.ExecuteNonQuery()
    Note over da,ds: SqlServerDAO calls upon<br>`SqlCommand.ExecuteNonQuery()`<br>to execute the sql command

ds->>ds: INSERT INTO UserAccount (UserName, Pepper, AccountCreation, UserHash)<br> VALUES (UserName, Pepper, AccountCreation, UserHash)

ds->>ds: User account unsuccessfully<br>writes to the Data Store

ds-->>-da: Database returns an error

da-->>-dg: IResponse object returned with<br>`Response.HasError` equal to true

dg-->>-uc: IResponse object returned with<br>`IResponse.HasError` equal to true

uc->>uc: UserService logs an account was unsuccessfully created
    Note over uc,uc: See logging success case

uc-->>-usm: IResponse object returned

deactivate usm
