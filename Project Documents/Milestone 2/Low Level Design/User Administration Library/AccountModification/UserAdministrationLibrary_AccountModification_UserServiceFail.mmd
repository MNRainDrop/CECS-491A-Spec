sequenceDiagram

    # See BRD UA-6 Account Modification
    # MethodName(varaibleName : dataType) : ReturnType

    participant ml as Manager Layer
    participant as as AuthService`<br>`(Services Layer)
    participant uc as UserService`<br>`(Services Layer)
    participant ls as LoggingService`<br>`(Services Layer)
    participant dg as SqlDbUserTarget`<br>`(Data Gateway)
    participant da as SQLServerDAO
    participant ds as Data Store

    ml->>+as: 'isAuthorized( currentPrincipal: AppPrincipal, requiredClaims: IDictionary<string> <string>): AppAuthService'
        Note over ml,as: Manager Layer calls upon`<br>`  'isAuthorized( currentPrincipal: AppPrincipal, requiredClaims: IDictionary<string> <string>): AppAuthService'`<br>`to see if user has correct permissions
        Note right of as: See Low Level Design for Authorization

    ml->>+uc:  modifyUser(IUserProfileModel): IResponse
        Note over ml,uc: Manager Layer calls upon`<br>modifyUser(IUserProfileModel): IResponse``<br>`to modify the user

    # UserService should check/ validate data passed through
    uc->>uc: UserService checks to see if the`IUserModel` object has errors or not

    uc->>+ls:'createLog(logLevel: string, logCategory: string, logContext: string, createdBy: string?): IResponse'
        Note over uc,ls: LoggingService calls upon`<br>`'createLog(logLevel: string, logCategory: string, logContext: string, createdBy: string?): IResponse'`<br>` to log the data entered incorrect
        Note right of ls: See Low Level Design for Logging

    ls -->>- ml: Returns IResponse object

    # Data validiation finds error 
    uc -->>- ml: UserService returns IResponse.HasError = true to Manager Layer
    