sequenceDiagram

    # See BRD UA-6 Account Modification
    # MethodName(varaibleName : dataType) : ReturnType

    participant ml as Manager Layer
    participant as as AuthService`<br>`(Services Layer)
    participant uc as UserService`<br>`(Services Layer)
    participant ls as LoggingService`<br>`(Services Layer)
    participant dg as SqlDbUserTarget`<br>`(Data Gateway)
    participant da as SQLServerDAO
    participant ds as Data Store

    ml->>+as: 'AppAuthService isAuthorized(AppPrincipal currentPrincipal, IDictionary`<string>` `<string>` requiredClaims)'
        Note over ml,as: Manager Layer calls upon`<br>`  'AppAuthService isAuthorized(AppPrincipal currentPrincipal, IDictionary`<string>` `<string>` requiredClaims)'`<br>`to see if user has correct permissions
        Note right of as: See Low Level Design for Authorization

    ml->>+uc: IAccountResponse modifyUser(IUserModel)
        Note over ml,uc: Manager Layer calls upon`<br>IAccountResponse modifyUser(IUserModel)``<br>`to modify the user

    # UserService should check/ validate data passed through
    uc->>uc: UserService checks to see if the`IUserModel` object has errors or not

    uc->>+ls:'IResponse createLog(string logLevel, string logCategory, string logContext, string? createdBy= null)'
        Note over uc,ls: LoggingService calls upon`<br>`'IResponse createLog(string logLevel, string logCategory, string logContext, string? createdBy= null)'`<br>` to log the data entered incorrect
        Note right of ls: See Low Level Design for Logging

    ls -->>- ml: Returns IResponse object

    # Data validiation finds error 
    uc -->>- ml: UserService returns IResponse.HasError = true to Manager Layer
    