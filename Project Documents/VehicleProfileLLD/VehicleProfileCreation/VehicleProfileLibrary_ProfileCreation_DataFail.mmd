sequenceDiagram
participant u as User
participant e as Entry Point
participant vpm as VehicleProfileManager<br>(Manager Layer)
participant vps as VehicleProfileService<br>(Services Layer)
participant ll as LogService<br>(Services Layer)

Note Right of e: Assume something in the entry point<br>called the manager to do create a user
Note Right of vpm: Assume the user provided values<br>are valid and the user is authorized<br>to create a vehicle profile

vpm->>+vps: CreateVehicleProfile(vin: string, licensePlate: string, color: string, userAccount: IUserAccount) : IResponse
    Note over vpm,vps: VehicleProfileManager calls upon<br>VehicleProfileService to create the vehicle

vps->>vps: Validate Parameters

vps->>vps: Parameters are invalid

vps->>vps: IResponse object Created
    Note over vps,vps: IResponse.HasError = true<br>IResponse.ErrorMessage = invalid arguments
# Log successful vehicle creation
vps-->>ll: CreateLogAsync(logLevel: string, logCategory: string, logContext: string, userHash: string) : IResponse
    Note over vps,ll: UserService calls upon LogService to log<br>successful creation of vehicle profile.<br>See logging success case

vps-->>-vpm: IResponse object returned